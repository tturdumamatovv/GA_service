# Generated by Django 5.1.1 on 2024-10-07 04:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'О нас'",
                'verbose_name_plural': "Раздел 'О нас'",
            },
        ),
        migrations.CreateModel(
            name='BannerSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок баннера')),
                ('title_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок баннера')),
                ('title_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок баннера')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание баннера')),
                ('description_ru', models.TextField(blank=True, null=True, verbose_name='Описание баннера')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Описание баннера')),
            ],
            options={
                'verbose_name': 'Раздел баннер',
                'verbose_name_plural': 'Раздел баннера',
            },
        ),
        migrations.CreateModel(
            name='BlogSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'Блог'",
                'verbose_name_plural': "Раздел 'Блог'",
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('phone_link', models.CharField(blank=True, help_text='Введите номер в формате: +971XXXXXXX', max_length=30, null=True, verbose_name='Телефонная ссылка')),
                ('opening_time_title', models.CharField(blank=True, help_text='Например: Время открытия', max_length=100, null=True, verbose_name='Заголовок время открытия')),
                ('opening_time_title_ru', models.CharField(blank=True, help_text='Например: Время открытия', max_length=100, null=True, verbose_name='Заголовок время открытия')),
                ('opening_time_title_en', models.CharField(blank=True, help_text='Например: Время открытия', max_length=100, null=True, verbose_name='Заголовок время открытия')),
                ('opening_days', models.CharField(blank=True, help_text='Например: пн-сб: 10:00–20:00 вс: ЗАКРЫТО', max_length=100, null=True, verbose_name='Дни работы')),
                ('opening_days_ru', models.CharField(blank=True, help_text='Например: пн-сб: 10:00–20:00 вс: ЗАКРЫТО', max_length=100, null=True, verbose_name='Дни работы')),
                ('opening_days_en', models.CharField(blank=True, help_text='Например: пн-сб: 10:00–20:00 вс: ЗАКРЫТО', max_length=100, null=True, verbose_name='Дни работы')),
            ],
            options={
                'verbose_name': 'Контактная информация',
                'verbose_name_plural': 'Контактные информации',
            },
        ),
        migrations.CreateModel(
            name='FAQSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': 'Часто задаваемые вопросы',
                'verbose_name_plural': 'Часто задаваемые вопросы',
            },
        ),
        migrations.CreateModel(
            name='FeaturesSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Заголовок, который отображается над сеткой с изображениями', max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(help_text='Заголовок, который отображается над сеткой с изображениями', max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(help_text='Заголовок, который отображается над сеткой с изображениями', max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': 'Раздел техника',
                'verbose_name_plural': 'Раздел техники',
            },
        ),
        migrations.CreateModel(
            name='FooterSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_text', models.TextField(verbose_name='Текст о компании')),
                ('about_text_ru', models.TextField(null=True, verbose_name='Текст о компании')),
                ('about_text_en', models.TextField(null=True, verbose_name='Текст о компании')),
                ('title_address', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Адрес'")),
                ('title_address_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Адрес'")),
                ('title_address_en', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Адрес'")),
                ('title_work_time', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Время работы'")),
                ('title_work_time_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Время работы'")),
                ('title_work_time_en', models.CharField(blank=True, max_length=255, null=True, verbose_name="Заголовок 'Время работы'")),
                ('logo', models.FileField(upload_to='footer/', verbose_name='Логотип')),
                ('whatsapp', models.FileField(upload_to='footer/', verbose_name='Логотип для whatsapp')),
                ('call', models.FileField(upload_to='footer/', verbose_name='Логотип для звонка')),
            ],
            options={
                'verbose_name': 'Раздел Футер',
                'verbose_name_plural': 'Раздел Футеры',
            },
        ),
        migrations.CreateModel(
            name='GoogleSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'Google отзыв'",
                'verbose_name_plural': "Раздел 'Google отзывы'",
            },
        ),
        migrations.CreateModel(
            name='HappyCustomersSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'Наши счастливые клиенты'",
                'verbose_name_plural': "Раздел 'Наши счастливые клиенты'",
            },
        ),
        migrations.CreateModel(
            name='HeroSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Основной заголовок для слайда, например, "Professional Repair Services..."', max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(blank=True, help_text='Основной заголовок для слайда, например, "Professional Repair Services..."', max_length=255, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(blank=True, help_text='Основной заголовок для слайда, например, "Professional Repair Services..."', max_length=255, null=True, verbose_name='Заголовок')),
                ('subtitle1', models.CharField(blank=True, help_text='Первый подзаголовок, например, "Premium out-of-warranty Apple Service Center in Dubai"', max_length=255, null=True, verbose_name='Подзаголовок 1')),
                ('subtitle1_ru', models.CharField(blank=True, help_text='Первый подзаголовок, например, "Premium out-of-warranty Apple Service Center in Dubai"', max_length=255, null=True, verbose_name='Подзаголовок 1')),
                ('subtitle1_en', models.CharField(blank=True, help_text='Первый подзаголовок, например, "Premium out-of-warranty Apple Service Center in Dubai"', max_length=255, null=True, verbose_name='Подзаголовок 1')),
                ('subtitle2', models.CharField(blank=True, help_text='Второй подзаголовок, например, "Visit our service center to avail repair services..."', max_length=255, null=True, verbose_name='Подзаголовок 2')),
                ('subtitle2_ru', models.CharField(blank=True, help_text='Второй подзаголовок, например, "Visit our service center to avail repair services..."', max_length=255, null=True, verbose_name='Подзаголовок 2')),
                ('subtitle2_en', models.CharField(blank=True, help_text='Второй подзаголовок, например, "Visit our service center to avail repair services..."', max_length=255, null=True, verbose_name='Подзаголовок 2')),
                ('image', models.ImageField(blank=True, help_text='Загрузите изображение для слайда', null=True, upload_to='hero_slider/', verbose_name='Изображение')),
                ('video', models.FileField(blank=True, help_text='Загрузите видео для слайда (по желанию)', null=True, upload_to='hero_slider/videos/', verbose_name='Видео')),
                ('whatsapp_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для WhatsApp кнопки')),
                ('whatsapp_text_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для WhatsApp кнопки')),
                ('whatsapp_text_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для WhatsApp кнопки')),
                ('whatsapp_link', models.CharField(blank=True, help_text='Введите ссылку WhatsApp, например, https://wa.me/971585929333', max_length=255, null=True, verbose_name='Ссылка на WhatsApp')),
                ('call_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для Call кнопки')),
                ('call_text_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для Call кнопки')),
                ('call_text_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Текст для Call кнопки')),
                ('call_link', models.CharField(blank=True, help_text='Введите номер телефона в формате tel:+971585929333', max_length=255, null=True, verbose_name='Ссылка для звонка')),
                ('best_in_town_text', models.CharField(blank=True, help_text='Текст вроде "Best in town Computer and Mobile Phone Repair Shop"', max_length=255, null=True, verbose_name='Лучший в городе текст')),
                ('best_in_town_text_ru', models.CharField(blank=True, help_text='Текст вроде "Best in town Computer and Mobile Phone Repair Shop"', max_length=255, null=True, verbose_name='Лучший в городе текст')),
                ('best_in_town_text_en', models.CharField(blank=True, help_text='Текст вроде "Best in town Computer and Mobile Phone Repair Shop"', max_length=255, null=True, verbose_name='Лучший в городе текст')),
                ('rating_text', models.CharField(blank=True, help_text='Например, "Rated 4.9 with 34 reviews"', max_length=255, null=True, verbose_name='Текст рейтинга')),
                ('rating_text_ru', models.CharField(blank=True, help_text='Например, "Rated 4.9 with 34 reviews"', max_length=255, null=True, verbose_name='Текст рейтинга')),
                ('rating_text_en', models.CharField(blank=True, help_text='Например, "Rated 4.9 with 34 reviews"', max_length=255, null=True, verbose_name='Текст рейтинга')),
            ],
            options={
                'verbose_name': 'Слайд на главной странице',
                'verbose_name_plural': 'Слайды на главной странице',
            },
        ),
        migrations.CreateModel(
            name='NavigationLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home', models.CharField(default='Главная', max_length=100, verbose_name='Главная')),
                ('home_ru', models.CharField(default='Главная', max_length=100, null=True, verbose_name='Главная')),
                ('home_en', models.CharField(default='Главная', max_length=100, null=True, verbose_name='Главная')),
                ('services', models.CharField(default='Услуги', max_length=100, verbose_name='Услуги')),
                ('services_ru', models.CharField(default='Услуги', max_length=100, null=True, verbose_name='Услуги')),
                ('services_en', models.CharField(default='Услуги', max_length=100, null=True, verbose_name='Услуги')),
                ('about_us', models.CharField(default='О нас', max_length=100, verbose_name='О нас')),
                ('about_us_ru', models.CharField(default='О нас', max_length=100, null=True, verbose_name='О нас')),
                ('about_us_en', models.CharField(default='О нас', max_length=100, null=True, verbose_name='О нас')),
                ('contacts', models.CharField(default='Контакты', max_length=100, verbose_name='Контакты')),
                ('contacts_ru', models.CharField(default='Контакты', max_length=100, null=True, verbose_name='Контакты')),
                ('contacts_en', models.CharField(default='Контакты', max_length=100, null=True, verbose_name='Контакты')),
            ],
            options={
                'verbose_name': 'Навигационная ссылка',
                'verbose_name_plural': 'Навигационные ссылки',
            },
        ),
        migrations.CreateModel(
            name='ServicesSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': 'Раздел услуга',
                'verbose_name_plural': 'Раздел услуги',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мета заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мета описание')),
                ('meta_image', models.ImageField(blank=True, null=True, upload_to='images/meta', verbose_name='Мета изображение')),
                ('site_name', models.CharField(max_length=255, verbose_name='Название сайта')),
                ('site_description', models.TextField(verbose_name='Описание сайта')),
                ('site_logo', models.FileField(blank=True, null=True, upload_to='site_logos', verbose_name='Логотип сайта')),
                ('site_bottom_logo', models.FileField(blank=True, null=True, upload_to='site_logos', verbose_name='Логотип нижней части сайта')),
                ('site_favicon', models.FileField(blank=True, null=True, upload_to='site_favicons', verbose_name='Иконка сайта')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайта',
            },
        ),
        migrations.CreateModel(
            name='StatisticsSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': 'Статистика',
                'verbose_name_plural': 'Статистика',
            },
        ),
        migrations.CreateModel(
            name='TeamSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'Наша команда'",
                'verbose_name_plural': "Раздел 'Наша команда'",
            },
        ),
        migrations.CreateModel(
            name='WhyChooseUsSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок секции')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок секции')),
            ],
            options={
                'verbose_name': "Раздел 'Почему стоит выбрать нас?'",
                'verbose_name_plural': "Раздел 'Почему стоит выбрать нас?'",
            },
        ),
        migrations.CreateModel(
            name='AboutBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='about_images/', verbose_name='Изображение')),
                ('text', models.TextField(verbose_name='Описание')),
                ('text_ru', models.TextField(null=True, verbose_name='Описание')),
                ('text_en', models.TextField(null=True, verbose_name='Описание')),
                ('is_reversed', models.BooleanField(default=False, verbose_name='Отображение текста слева')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='service.aboutsection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'О нас: Блок',
                'verbose_name_plural': 'О нас: Блоки',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Текст поста')),
                ('content_ru', models.TextField(null=True, verbose_name='Текст поста')),
                ('content_en', models.TextField(null=True, verbose_name='Текст поста')),
                ('video', models.FileField(blank=True, null=True, upload_to='blog_videos/', verbose_name='Видео')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='service.blogsection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Блог пост',
                'verbose_name_plural': 'Блог посты',
            },
        ),
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('question_ru', models.CharField(max_length=255, null=True, verbose_name='Вопрос')),
                ('question_en', models.CharField(max_length=255, null=True, verbose_name='Вопрос')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('answer_ru', models.TextField(null=True, verbose_name='Ответ')),
                ('answer_en', models.TextField(null=True, verbose_name='Ответ')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_items', to='service.faqsection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='FeatureItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Загрузите изображение для элемента', upload_to='features_images/', verbose_name='Изображение')),
                ('title', models.CharField(help_text='Название, отображаемое под изображением', max_length=100, verbose_name='Название элемента')),
                ('title_ru', models.CharField(help_text='Название, отображаемое под изображением', max_length=100, null=True, verbose_name='Название элемента')),
                ('title_en', models.CharField(help_text='Название, отображаемое под изображением', max_length=100, null=True, verbose_name='Название элемента')),
                ('link', models.URLField(help_text='URL для ссылки, которая будет прикреплена к элементу', verbose_name='Ссылка для элемента')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_items', to='service.featuressection', verbose_name='Секция')),
            ],
        ),
        migrations.CreateModel(
            name='EmailInfoFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(blank=True, null=True, upload_to='footer/', verbose_name='Логотип')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на Email')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('rating', models.IntegerField(verbose_name='Рейтинг')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='URL аватара')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='google', to='service.googlesection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Отзыв Google',
                'verbose_name_plural': 'Отзывы Google',
            },
        ),
        migrations.CreateModel(
            name='HappyCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='customer_images/', verbose_name='Изображение')),
                ('video', models.FileField(blank=True, null=True, upload_to='customer_videos/', verbose_name='Видео')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='service.happycustomerssection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Счастливый клиент',
                'verbose_name_plural': 'Счастливые клиенты',
            },
        ),
        migrations.CreateModel(
            name='AdvantageIconText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.FileField(help_text='Загрузите SVG или PNG файл для иконки', upload_to='advantage_icons/', verbose_name='Иконка')),
                ('text', models.CharField(help_text='Текст преимущества, например, "Professional team"', max_length=255, verbose_name='Текст преимущества')),
                ('text_ru', models.CharField(help_text='Текст преимущества, например, "Professional team"', max_length=255, null=True, verbose_name='Текст преимущества')),
                ('text_en', models.CharField(help_text='Текст преимущества, например, "Professional team"', max_length=255, null=True, verbose_name='Текст преимущества')),
                ('hero_slide', models.ForeignKey(help_text='Слайд, к которому относится данное преимущество', on_delete=django.db.models.deletion.CASCADE, related_name='advantages', to='service.heroslide', verbose_name='Слайд')),
            ],
            options={
                'verbose_name': 'Преимущество',
                'verbose_name_plural': 'Преимущества',
            },
        ),
        migrations.CreateModel(
            name='LocationInfoFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(blank=True, null=True, upload_to='footer/', verbose_name='Логотип')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адресс')),
                ('address_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адресс')),
                ('address_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адресс')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на Адрес')),
                ('map_iframe', models.TextField(blank=True, null=True, verbose_name='Iframe код для карты')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.FileField(upload_to='footer/payment/', verbose_name='Иконка метода оплаты')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Метод оплаты',
                'verbose_name_plural': 'Методы оплаты',
            },
        ),
        migrations.CreateModel(
            name='PhoneInfoFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(blank=True, null=True, upload_to='footer/', verbose_name='Логотип')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефон')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка на Whats App')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок таба')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок таба')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок таба')),
                ('tab_id', models.CharField(max_length=100, verbose_name='ID таба (для переключения)')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный по умолчанию')),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_images/', verbose_name='Изображение таба')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabs', to='service.servicessection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Кнопка для услуги',
                'verbose_name_plural': 'Кнопки для услуг',
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок услуги')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок услуги')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок услуги')),
                ('description', models.TextField(verbose_name='Описание услуги')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание услуги')),
                ('description_en', models.TextField(null=True, verbose_name='Описание услуги')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='service.servicetab', verbose_name='Таб')),
            ],
            options={
                'verbose_name': 'Пункт для кнопки',
                'verbose_name_plural': 'Пункты для кнопки',
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название соц. сети')),
                ('url', models.URLField(verbose_name='Ссылка на соц. сеть')),
                ('icon', models.FileField(upload_to='footer/socials/', verbose_name='Иконка соц. сети')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socials', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Социальная сеть',
                'verbose_name_plural': 'Социальные сети',
            },
        ),
        migrations.CreateModel(
            name='StatisticItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название статистики')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название статистики')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название статистики')),
                ('value', models.IntegerField(verbose_name='Значение')),
                ('icon', models.FileField(upload_to='statistics_icons/', verbose_name='Иконка')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='service.statisticssection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Статистика',
                'verbose_name_plural': 'Статистика',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Имя')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Имя')),
                ('position', models.CharField(max_length=255, verbose_name='Должность')),
                ('position_ru', models.CharField(max_length=255, null=True, verbose_name='Должность')),
                ('position_en', models.CharField(max_length=255, null=True, verbose_name='Должность')),
                ('image', models.ImageField(upload_to='team_images/', verbose_name='Фотография')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='service.teamsection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Член команды',
                'verbose_name_plural': 'Члены команды',
            },
        ),
        migrations.CreateModel(
            name='Advantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок преимущества')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок преимущества')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок преимущества')),
                ('description', models.TextField(verbose_name='Описание преимущества')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание преимущества')),
                ('description_en', models.TextField(null=True, verbose_name='Описание преимущества')),
                ('image', models.FileField(upload_to='advantage_images/', verbose_name='Изображение преимущества')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantages', to='service.whychooseussection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Преимущество',
                'verbose_name_plural': 'Преимуществa',
            },
        ),
        migrations.CreateModel(
            name='WorkHour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], null=True, verbose_name='День')),
                ('open_time', models.CharField(max_length=20, verbose_name='Время открытия')),
                ('close_time', models.CharField(max_length=20, verbose_name='Время закрытия')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Выходной')),
                ('weekend', models.CharField(blank=True, max_length=255, null=True, verbose_name='Выходные, Праздники')),
                ('weekend_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Выходные, Праздники')),
                ('weekend_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Выходные, Праздники')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_hours', to='service.footersection', verbose_name='Секция')),
            ],
            options={
                'verbose_name': 'Рабочее время',
                'verbose_name_plural': 'Рабочее время',
                'ordering': ['day'],
            },
        ),
    ]
